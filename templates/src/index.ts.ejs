import express from 'express';
import dotenv from 'dotenv';
import cors from 'cors';
import helmet from 'helmet';

dotenv.config();

const app = express();
const PORT = process.env.PORT || 3000;

// Security & basics
app.use(helmet());
app.use(cors());

// Middleware based on choices
<% if (answers.parser) { %>
import bodyParser from 'body-parser';
app.use(bodyParser.json());
<% } %>
<% if (answers.logger) { %>
import morgan from 'morgan';
app.use(morgan('combined'));
<% } %>

// ORM stub
<% if (answers.orm === 'Prisma') { %>
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();
<% } else if (answers.orm === 'Sequelize') { %>
import { Sequelize } from 'sequelize';
const sequelize = new Sequelize(process.env.DATABASE_URL || 'postgres://localhost:5432/mydb');
<% } %>

// Routes
app.get('/', (req, res) => {
  res.json({ message: 'Hello from ExpressStart!' });
});

// Error handler
app.use((err: any, req: any, res: any, next: any) => {
  console.error(err.stack);
  res.status(500).json({ error: 'Something broke!' });
});

// Extend prototypes (opt-in call)
import { extendPrototypes } from './utils/extend-prototypes';
extendPrototypes();  // Uncomment to enable utils

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
